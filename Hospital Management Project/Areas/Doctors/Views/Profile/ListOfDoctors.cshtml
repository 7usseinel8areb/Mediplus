@model X.PagedList.IPagedList<Doctor>
@using X.PagedList.Mvc;
@using X.PagedList.Mvc.Core

<br />
<div class="breadcrumbs overlay">
    <div class="container">
        <div class="bread-inner">
            <div class="row">
                <div class="col-12">
                    <h2>Meet Our Qualified Doctors</h2>
                    <ul class="bread-list">
                        <li><a href="~/Home">Home</a></li>
                        <li><i class="icofont-simple-right"></i></li>
                        <li class="active">Doctors</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <!-- Search Box -->
    <div class="row">
    <div class="col-md-12 d-flex justify-content-end my-4">
        <div class="search-container" style="background-color: white; padding: 15px; border-radius: 10px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); display: flex; align-items: center; width: 300px;">
            <input type="text" id="keyword" class="form-control me-2" style="width: 200px; height: 45px; font-size: 16px; border-radius: 5px; border: 1px solid #ced4da;" placeholder="Search Here..." />
            <button id="searchButton" class="btn btn-dark" style="height: 45px; font-size: 16px; border-radius: 5px;">
                <i class="fa fa-search"></i>
            </button>
        </div>
    </div>
</div>


    <!-- Display Doctors -->
    <div class="row justify-content-center card-row" id="doctorResults">
        @foreach (var doctor in Model)
        {
            <div class="card doctor-card">
                <div class="photo-container" onmouseover="showAppointmentButton(this)" onmouseout="hideAppointmentButton(this)">
                    <img src="~/@doctor.Img" alt="@doctor.UserName" class="card-img-top doctor-photo">
                    <button class="appointment-button btn btn-primary" style="display: none;" onclick="goToCreateAppointment('@doctor.Id')">Make Appointment</button>
                </div>
                <div class="card-body">
                    <p class="department-name">@doctor.Department?.DepartmentName</p>
                    <h5 class="card-title doctor-name" onclick="goToDetails(event, '@Url.Action("Index", "Profile", new { id = doctor.Id })')">
                        @doctor.FullName
                    </h5>
                </div>
            </div>
        }
    </div>

    <!-- Pagination controls -->
    <div class="pagination-container" style="text-align: center;">
        @if (Model.HasPreviousPage)
        {
            <a href="@Url.Action("ListOfDoctors", new { page = Model.PageNumber - 1, keyword = ViewBag.Keyword })" class="btn btn-outline-primary">Previous</a>
        }
        @if (Model.HasNextPage)
        {
            <a href="@Url.Action("ListOfDoctors", new { page = Model.PageNumber + 1, keyword = ViewBag.Keyword })" class="btn btn-outline-primary">See More</a>
        }
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#searchButton').on('click', function () {
                var keyword = $('#keyword').val();

                $.ajax({
                    url: '@Url.Action("ListOfDoctors")',
                    type: 'GET',
                    data: { keyword: keyword },
                    success: function (data) {
                        $('#doctorResults').html($(data).find('#doctorResults').html());
                    },
                    error: function () {
                        alert('Error retrieving data.');
                    }
                });
            });
        });

        function showAppointmentButton(container) {
            const button = container.querySelector('.appointment-button');
            const image = container.querySelector('.doctor-photo');
            button.style.display = 'block'; // Show button on hover
            image.style.filter = 'brightness(70%)'; // Darken the image on hover
            button.style.backgroundColor = '#007bff'; // Set button color to blue on image hover
            button.style.borderColor = '#007bff'; // Set border color to blue on image hover
        }

        function hideAppointmentButton(container) {
            const button = container.querySelector('.appointment-button');
            const image = container.querySelector('.doctor-photo');
            button.style.display = 'none'; // Hide button when not hovering
            image.style.filter = 'brightness(100%)'; // Restore the image brightness
            button.style.borderColor = 'transparent'; // Restore border color
        }

        function goToDetails(event, detailViewUrl) {
            event.stopPropagation(); // Prevent photo click from firing
            const doctorName = event.target;
            doctorName.style.color = 'blue'; // Change color to blue

            // Redirect to the details view
            window.location.href = detailViewUrl;
        }

        function goToCreateAppointment(doctorId) {
            // Redirect to the Create action of the Appointment controller, passing the doctor ID
            window.location.href = '@Url.Action("Create", "PatientAppointment", new { area = "Patient" })' + '?DoctorId=' + doctorId;
        }

    </script>
}

<!-- Embedded CSS -->
<style>
    .container {
        margin-top: 30px;
    }

    .card-row {
        display: flex; /* Enable flexbox */
        flex-wrap: wrap; /* Allow wrapping to next line */
        justify-content: center; /* Center the cards */
    }

    .doctor-card {
        flex: 0 1 calc(33.333% - 20px); /* Make cards take up 1/3 of the row, minus spacing */
        margin: 10px; /* Add margin for spacing between cards */
        max-width: 300px; /* Optional: set a max width for cards */
        border: 1px solid #ddd;
        border-radius: 13px; /* Add border-radius to cards */
        padding: 0; /* Remove internal padding */
        text-align: center;
        transition: box-shadow 0.3s ease;
        height: 450px; /* Fixed height for cards */
    }

    .doctor-card:hover {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .photo-container {
        position: relative; /* For positioning the button */
        height: 550px; /* Set a fixed height for image container */
        overflow: hidden; /* Hide overflow */
    }

    .doctor-photo {
        height: 100%; /* Full height */
        width: 100%; /* Full width */
        object-fit: cover; /* Maintain aspect ratio and cover the area */
        cursor: pointer; /* Change cursor to indicate clickable */
        transition: filter 0.3s; /* Smooth transition for filter */
    }

    .doctor-photo:hover {
        filter: brightness(70%); /* Darken the photo on hover */
    }

    .appointment-button {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        display: none;
        transition: opacity 0.3s, background-color 0.3s, border-color 0.3s; /* Add border-color transition */
        opacity: 1;
        background-color: #007bff; /* Button background color */
        border: 2px solid #007bff; /* Initial border color */
        border-radius: 5px; /* Rounded corners */
        padding: 10px 20px; /* Padding around the text */
        color: white; /* Text color */
        font-size: 16px; 
        cursor: pointer; 
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); 
    }

    .appointment-button:hover {
        background-color: black; 
        border-color: black;
    }

    .department-name {
        font-weight: bold; 
        color: gray; 
        margin: 0; 
        margin-bottom: 10px; 
    }

    .card-title.doctor-name {
        font-size: 18px;
        cursor: pointer;
        color: black;
        transition: color 0.3s;
    }

    .card-title.doctor-name:hover {
        color: blue;
    }

    /* Media query to ensure responsiveness */
    @@media (max-width: 768px) {
        .doctor-card {
            flex: 0 1 calc(50% - 20px); 
        }
    }

    @@media (max-width: 480px) {
        .doctor-card {
            flex: 0 1 100%; 
        }
    }

    .pagination-container {
        text-align: center;
        margin-top: 20px;
    }
</style>
